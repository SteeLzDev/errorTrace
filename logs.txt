DoD:

Mapear endpoint POST /simulate no swagger e disponibilizar para o frontend;
Implementar POST /simulate;
Integração com endpoint da Antecipa que irá retornar a simulação dos recebíveis antecipáveis (Integração já foi mapeada);
Payload de exemplo:
POST /simulate

Status CODE:
201 Created, resposta da simulação 
204 no Content (não tem ofertas)
401, Unauthorized
424, Failed Dependency
500, Internal Server error



O finalUsername vindo da Antecipa vai ser usado para a interface UserSecurityService, vamos pegar o getUserId para poder fornecer a informação que é o que vem de dentro do token, a chamada precisa ter o token, se não vai dar erro, ter as validações do Token no Controller para desencargo.



cardReceivables vai pegar de acordo com o que vier da definição que vem do front. O Front vai definir algo parecido com isso.
A primeira informação corresponde ao CNPJ da credenciadora e a lista vai ser o ID dos recebíveis.

Para o request será isso, receber o CNPJ e os IDs dos recebíveis agrupados 

[
  {
    "accreditingInstitutionDocument": "CNPJ_A",     #CNPJ da credenciadora (Maquininha)
    "ids": [                                        #Lista de IDs dos recebíveis
      "string" 
    ]
  },
  {
    "accreditingInstitutionDocument": "CNPJ_B",     #CNPJ da credenciadora (Maquininha)
    "ids": [                                        #Lista de IDs dos recebíveis
      "string" 
    ]
  }
]




O parceiro (Antecipa) irá retornar as ofertas por credenciadora, a lista de ofertas vai retornar o nome do financiador porém o que importa é ID. cardReceivables são os
recebíveis que foram  aprovados para antecipação 

e para resposta o JSON abaixo.

{
  "receivableOfferIds": [ // Lista de IDs das ofertas retornadas pela antecipa.
    "offer_id_1",
    "offer_id_2",
    "offer_id_3"
  ],
  "cardBrands": [ // Lista de credenciadoras (Nome da Maquininha) PS: Antecipa irá definir a estrutura
    "Cielo",
    "Stone"
  ],
  "bankAccounts": [ // Informações da conta em que o recebível será depositado
    {
      "bankName": "Bradesco", // Nome do banco
      "agencyNumber": "1234-5", // Número da agência
      "accountNumber": "1234567-8", // Número da conta
      "creditedAmount": 1575.00, // Valor bruto respectivo à conta (valor com taxas) selectedAmount vindo da antecipa
      "associatedBrand": "Cielo" // Nome da credenciadora associada à conta
    },
    {
      "bankName": "Itaú",
      "agencyNumber": "6789-0",
      "accountNumber": "1234567-8",
      "creditedAmount": 1575.00,
      "associatedBrand": "Stone"
    }
  ],
  "receivablesCount": 3, // Representa o número de unidades de recebíveis aprovadas (Count na lista retornada pela Antecipa)
  "grossTotalAmount": 3150.00, // Soma do 'creditedAmount' da lista de 'bankAccounts' (valores com taxa). Trabalhar com BigDecimal para realizar a soma
  "totalDiscountAmount": 150.00, // Soma do campo 'discount' retornado na lista de ofertas pela antecipa. Trabalhar com BigDecimal para realizar a soma
  "netAmountToReceive": 3000.00 // Soma do campo 'finalAmount' retornado na lista de ofertas pela antecipa. Trabalhar com BigDecimal para realizar a soma
}


OBS: accreditingInstitution  não faz sentido não estar dentro da lista, porque para poder exibir as maquininhas o accreditingInstitution deve estar dentro da lista.

unidades de recebíveis selecionadas URs:
pode usar o cardReceivables e fazer o count de quantos tem. 



