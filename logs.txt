package br.com.experian.buzz.infrastructure.adapter;

import br.com.experian.antecipa.model.SupplierRegistrationDto;
import br.com.experian.buzz.domain.enums.OnboardingStatus;
import br.com.experian.buzz.domain.exeption.FailedDependecyException;
import br.com.experian.buzz.domain.port.AntecipaOnboardingPort;
import br.com.experian.buzz.domain.port.AuthenticationPort;
import br.com.experian.buzz.infrastructure.integration.feign.client.antecipa.AntecipaClient;
import feign.FeignException;
import io.github.resilience4j.retry.annotation.Retry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;


public class AntecipaOnboardingAdapter implements AntecipaOnboardingPort {

    private static final Logger log  = LoggerFactory.getLogger(AntecipaOnboardingAdapter.class);
    private static final String FAILED_DEPENDENCY_MESSAGE = "Falha na comunicação com o serviço de onboarding.";

    private final AntecipaClient antecipaClient;
    private final AuthenticationPort authenticationPort;
    private final String defaultCapitalSourceDocument;



    public AntecipaOnboardingAdapter(AntecipaClient antecipaClient, AuthenticationPort authenticationPort,
                                     @Value("$api.antecipa.default-capital-source:58408679000132") String defaultCapitalSourceDocument) {
        this.antecipaClient = antecipaClient;
        this.authenticationPort = authenticationPort;
        this.defaultCapitalSourceDocument = defaultCapitalSourceDocument;
    }

    @Override
    @Retry(name = "AntecipaClient")
    public OnboardingStatus getOnboardingStatus(String supplierDocument) {
        try {
            log.debug("Consultando status de onboarding na API Antecipa para documento: {}", supplierDocument);

            //Obter token válido
            String bearerToken = "Bearer " + authenticationPort.getValidToken();
            log.debug("Token obtido para autenticação");
            SupplierRegistrationDto supplierRegistration = antecipaClient.getSupplierRegistration(
                    bearerToken,
                    defaultCapitalSourceDocument,
                    supplierDocument
            );

            if(supplierRegistration == null) {
                log.info("API Retornou null - não há registro para documento:{} ", supplierDocument);
                return null;
            }

            OnboardingStatus mappedStatus = mapApiStatusToEnum(supplierRegistration.getStatus(), supplierRegistration.getStatusId());
            log.info("Status obtido da API: '{}' (ID: {}) -> Mapeado para: {} para documento: {}",
                    supplierRegistration.getStatus(),
                    supplierRegistration.getStatusId(),
                    mappedStatus,
                    supplierDocument);



'mapApiStatusToEnum(java.lang.String, java.lang.Integer)' in 'br.com.experian.buzz.infrastructure.adapter.AntecipaOnboardingAdapter' cannot be applied to '(org.openapitools.jackson.nullable.@jakarta.validation.constraints.NotNull JsonNullable<java.lang.String>, java.lang.Integer)'
