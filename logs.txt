package br.com.experian.buzz.config;


import br.com.experian.buzz.domain.port.AntecipaOnboardingPort;
import br.com.experian.buzz.domain.port.OnboardingRepositoryPort;
import br.com.experian.buzz.domain.service.OnboardingService;
import br.com.experian.buzz.infrastructure.adapter.AntecipaOnboardingAdapter;
import br.com.experian.buzz.infrastructure.adapter.OnboardingRepositoryAdapter;
import br.com.experian.buzz.infrastructure.integration.feign.client.antecipa.AntecipaClient;
import br.com.experian.buzz.infrastructure.repository.OnboardingJpaRepository;
import br.com.experian.buzz.infrastructure.service.OnboardingServiceImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;

@Configuration
public class OnboardingBeansConfig {


    private static final Logger log = LoggerFactory.getLogger(OnboardingBeansConfig.class);

    @Bean
    @Primary
    public OnboardingRepositoryPort onboardingRepositoryPort (OnboardingJpaRepository jpaRepository){
        log.info("Criando OnboardingRepositoryPort manualmente");
        return new OnboardingRepositoryAdapter(jpaRepository);
    }

    @Bean
    @Primary
    public AntecipaOnboardingPort antecipaOnboardingPort(AntecipaClient antecipaClient) {
        log.info("Criando AntecipaOnboardingPort manualmente");
        return new AntecipaOnboardingAdapter(antecipaClient);
    }

    @Bean
    @Primary
    public OnboardingService onboardingService(
            OnboardingRepositoryPort onboardingRepositoryPort,
            AntecipaOnboardingPort antecipaOnboardingPort){
        log.info("Criando OnboardingService manualmente");
        log.info("OnboardingRepositoryPort: {}", onboardingRepositoryPort.getClass().getName());
        log.info("AntecipaOnboardingPort: {}", antecipaOnboardingPort.getClass().getName());

        return new OnboardingServiceImpl(onboardingRepositoryPort, antecipaOnboardingPort);
    }

}


Expected no arguments but found 1  return new AntecipaOnboardingAdapter(antecipaClient);
Expected no arguments but found 2   return new OnboardingServiceImpl(onboardingRepositoryPort, antecipaOnboardingPort);


