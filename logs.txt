package br.com.experian.swagger.antecipa.model;

import java.net.URI;
import java.util.Objects;
import br.com.experian.swagger.antecipa.model.AntecipaAnticipationCardReceivableListDto;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.springframework.lang.Nullable;
import java.util.NoSuchElementException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;
import java.time.OffsetDateTime;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import jakarta.annotation.Generated;

/**
 * AntecipaAnticipationCardReceivableListDtoPagedCollectionItems
 */

@JsonTypeName("AnticipationCardReceivableListDtoPagedCollectionItems")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-19T14:01:55.440580600-03:00[America/Sao_Paulo]", comments = "Generator version: 7.11.0")
public class AntecipaAnticipationCardReceivableListDtoPagedCollectionItems implements Serializable {

  private static final long serialVersionUID = 1L;

  @Valid
  private JsonNullable<List<@Valid AntecipaAnticipationCardReceivableListDto>> items = JsonNullable.<List<@Valid AntecipaAnticipationCardReceivableListDto>>undefined();

  private JsonNullable<String> pageNextId = JsonNullable.<String>undefined();

  private @Nullable Integer pageSize;

  public AntecipaAnticipationCardReceivableListDtoPagedCollectionItems items(List<@Valid AntecipaAnticipationCardReceivableListDto> items) {
    this.items = JsonNullable.of(items);
    return this;
  }

  public AntecipaAnticipationCardReceivableListDtoPagedCollectionItems addItemsItem(AntecipaAnticipationCardReceivableListDto itemsItem) {
    if (this.items == null || !this.items.isPresent()) {
      this.items = JsonNullable.of(new ArrayList<>());
    }
    this.items.get().add(itemsItem);
    return this;
  }

  /**
   * Get items
   * @return items
   */
  @Valid 
  @Schema(name = "items", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("items")
  public JsonNullable<List<@Valid AntecipaAnticipationCardReceivableListDto>> getItems() {
    return items;
  }

  public void setItems(JsonNullable<List<@Valid AntecipaAnticipationCardReceivableListDto>> items) {
    this.items = items;
  }

  public AntecipaAnticipationCardReceivableListDtoPagedCollectionItems pageNextId(String pageNextId) {
    this.pageNextId = JsonNullable.of(pageNextId);
    return this;
  }

  /**
   * Get pageNextId
   * @return pageNextId
   */
  
  @Schema(name = "pageNextId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("pageNextId")
  public JsonNullable<String> getPageNextId() {
    return pageNextId;
  }

  public void setPageNextId(JsonNullable<String> pageNextId) {
    this.pageNextId = pageNextId;
  }

  public AntecipaAnticipationCardReceivableListDtoPagedCollectionItems pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Get pageSize
   * @return pageSize
   */
  
  @Schema(name = "pageSize", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("pageSize")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AntecipaAnticipationCardReceivableListDtoPagedCollectionItems anticipationCardReceivableListDtoPagedCollectionItems = (AntecipaAnticipationCardReceivableListDtoPagedCollectionItems) o;
    return equalsNullable(this.items, anticipationCardReceivableListDtoPagedCollectionItems.items) &&
        equalsNullable(this.pageNextId, anticipationCardReceivableListDtoPagedCollectionItems.pageNextId) &&
        Objects.equals(this.pageSize, anticipationCardReceivableListDtoPagedCollectionItems.pageSize);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(items), hashCodeNullable(pageNextId), pageSize);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AntecipaAnticipationCardReceivableListDtoPagedCollectionItems {\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    pageNextId: ").append(toIndentedString(pageNextId)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

